# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven
name: Java CI with Maven
#on:
  #push:
    #branches: [ main ]
  #pull_request:
  #  branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B verify
      
      - name: Send failure logs
        if: failure()
        run: |
          # Récupérer les logs via l'API GitHub Actions
          payload=$(cat <<EOF
          {
            "status": "failure",
            "branch": "${{ github.ref_name }}",
            "commit": "${{ github.sha }}",
            "repository": "${{ github.repository }}",
            "workflow": "${{ github.workflow }}",
            "run_id": "${{ github.run_id }}",
            "job_id": "${{ github.job }}",
            "logs_url": "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/logs",
            "web_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          EOF
          )
          
          echo "Envoi du payload webhook: ${payload}"
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "${payload}" \
            --connect-timeout 30 \
            https://still-elegant-asp.ngrok-free.app/webhook/ci-failure
